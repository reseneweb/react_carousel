{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","onPageChange","fullVisibleWidth","useState","activeIndex","setActiveIndex","useEffect","Array","from","length","_","i","className","style","width","gap","transform","transition","map","image","index","height","src","alt","String","visibility","type","onClick","prevIndex","Math","max","cn","disabled","min","App","state","handleFrameSizeChange","event","newFrameSize","parseInt","target","value","Number","isNaN","setState","handleItemWidthChange","newItemWidth","handleStepChange","newStep","handleAnimationDurationChange","newDuration","this","htmlFor","id","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a07ae8fc.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport cn from 'classnames';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  onPageChange: (indexVisibleImages: number[]) => void,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  onPageChange,\n}) => {\n  const gapBetweenPictures = 10;\n  const fullVisibleWidth\n    = (itemWidth * frameSize) + (frameSize * gapBetweenPictures);\n\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  useEffect(() => {\n    onPageChange(Array.from({ length: frameSize }, (_, i) => activeIndex + i));\n  }, [activeIndex, frameSize, onPageChange]);\n\n  const handleClickToPrev = () => {\n    setActiveIndex((prevIndex) => Math.max(prevIndex - step, 0));\n  };\n\n  const handleClickToNext = () => {\n    setActiveIndex(\n      (prevIndex) => Math.min(prevIndex + step, images.length - frameSize),\n    );\n  };\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{\n        width: `${fullVisibleWidth}px`,\n      }}\n    >\n      <ul\n        className=\"Carousel__list\"\n        style={{\n          gap: `${gapBetweenPictures}px`,\n          transform: `translateX(-${(activeIndex * (itemWidth + gapBetweenPictures))}px)`,\n          transition: `transform ${animationDuration}ms`,\n        }}\n      >\n        {images.map((image, index) => (\n          <li\n            key={image}\n            style={{\n              height: `${itemWidth}px`,\n              width: `${itemWidth}px`,\n            }}\n          >\n            <img\n              src={image}\n              alt={String(index)}\n              style={{\n                height: `${itemWidth}px`,\n                width: `${itemWidth}px`,\n                visibility: index >= activeIndex\n                && index < activeIndex + frameSize ? 'visible' : 'hidden',\n                transition: `visibility ${animationDuration}ms`,\n              }}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"button-container\">\n        <button\n          type=\"button\"\n          onClick={handleClickToPrev}\n          className={cn('button', { disabled: activeIndex === 0 })}\n        >\n          «\n        </button>\n\n        <button\n          data-cy=\"next\"\n          type=\"button\"\n          onClick={handleClickToNext}\n          className={cn('button', {\n            disabled: activeIndex >= images.length - frameSize,\n          })}\n        >\n          »\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { ChangeEvent } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  frameSize: number;\n  step: number;\n  itemWidth: number;\n  animationDuration: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    frameSize: 3,\n    step: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n  };\n\n  handleFrameSizeChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const newFrameSize = parseInt(event.target.value, 10);\n\n    if (!Number.isNaN(newFrameSize)\n      && newFrameSize >= 1 && newFrameSize <= 10) {\n      this.setState({\n        frameSize: newFrameSize,\n      });\n    }\n  };\n\n  handleItemWidthChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const newItemWidth = parseInt(event.target.value, 10);\n\n    if (!Number.isNaN(newItemWidth)) {\n      this.setState({\n        itemWidth: newItemWidth,\n      });\n    }\n  };\n\n  handleStepChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const newStep = parseInt(event.target.value, 10);\n\n    if (!Number.isNaN(newStep) && newStep >= 1 && newStep <= 10) {\n      this.setState({\n        step: newStep,\n      });\n    }\n  };\n\n  handleAnimationDurationChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const newDuration = parseInt(event.target.value, 10);\n\n    if (!Number.isNaN(newDuration) && newDuration >= 0) {\n      this.setState({\n        animationDuration: newDuration,\n      });\n    }\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      step,\n      itemWidth,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n        <div>\n          <label htmlFor=\"itemId\">Item Width:</label>\n          <input\n            type=\"number\"\n            id=\"itemId\"\n            value={itemWidth}\n            onChange={this.handleItemWidthChange}\n            className=\"small-input\"\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"frameId\">Frame Size:</label>\n          <input\n            type=\"number\"\n            id=\"frameId\"\n            value={frameSize}\n            min=\"1\"\n            max=\"10\"\n            onChange={this.handleFrameSizeChange}\n            className=\"small-input\"\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"stepId\">Scroll Step:</label>\n          <input\n            type=\"number\"\n            id=\"stepId\"\n            value={step}\n            min=\"1\"\n            max=\"10\"\n            onChange={this.handleStepChange}\n            className=\"small-input\"\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"animationDurationInput\">\n            Animation:\n          </label>\n          <input\n            type=\"number\"\n            id=\"animationDurationInput\"\n            value={animationDuration}\n            min=\"0\"\n            onChange={this.handleAnimationDurationChange}\n            className=\"small-input\"\n          />\n        </div>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          onPageChange={() => {}}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}